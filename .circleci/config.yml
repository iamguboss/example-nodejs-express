# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11-stretch
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      - run: yarn test
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: "Build docker image and push to docker hub"
          command: |
              cp Dockerfile.production Dockerfile
              docker build -t guboss1509/testexpressnodejs:latest .
              docker build -t guboss1509/testexpressnodejs:${CIRCLE_SHA1} .
              docker push guboss1509/testexpressnodejs:latest
              docker push guboss1509/testexpressnodejs:${CIRCLE_SHA1}
      - run: 
          name: "Call to rancher to deploy"
          command: |
              docker run --rm -it \
                -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
                -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
                -e CATTLE_URL="$CATTLE_URL" \
                etlweather/gaucho upgrade $RANCHER_EXAMPLE_NODEJS \
                --imageUuid 'docker:guboss1509/testexpressnodejs:latest' \
                --batch_size 1 --start_first \
                --auto_complete --timeout 600 \
                /
      - run: echo Done!